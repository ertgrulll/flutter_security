import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';

part 'platform_options.freezed.dart';
part 'platform_options.g.dart';

abstract class PlatformSecurityOptions {}

@freezed
class IosSecurityOptions extends PlatformSecurityOptions
    with _$IosSecurityOptions {
  @JsonSerializable(explicitToJson: true)
  factory IosSecurityOptions({
    /// [bundleId] is the app bundle identifier of the app to be signed.
    /// It's required for 'amITampered' and 'hasBundleBeenCompromised' methods.
    required final String bundleId,

    /// [mobileProvision] is required for 'amITampered' method.
    final String? mobileProvision,

    /// [jsonFileName] is the json name previously generated by the script containing
    /// paths and corresponding MD5 datas.
    /// required for 'hasBundleBeenCompromised' method.
    final String? jsonFileName,

    /// [cryptographicKey] is the key used to encrypt the json.
    /// If you're using the script attached in the readme https://github.com/ziomarco/mobile-security-hashgenerator
    /// the default length is 32 characters.
    /// required for 'hasBundleBeenCompromised' method.
    final String? cryptographicKey,

    /// [listOfPaths] rapresents a list of the paths to get MD5 of.
    /// required for 'hasBundleBeenCompromised' method.
    final List<String>? listOfPaths,
  }) = _IosSecurityOptions;

  factory IosSecurityOptions.fromJson(Map<String, dynamic> json) =>
      _$IosSecurityOptionsFromJson(json);
}

@freezed
class AndroidSecurityOptions extends PlatformSecurityOptions
    with _$AndroidSecurityOptions {
  @JsonSerializable(explicitToJson: true)
  factory AndroidSecurityOptions({final String? sha1}) =
      _AndroidSecurityOptions;
  factory AndroidSecurityOptions.fromJson(Map<String, dynamic> json) =>
      _$AndroidSecurityOptionsFromJson(json);
}
